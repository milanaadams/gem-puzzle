{"version":3,"sources":["webpack://webpacktest/./src/stat.js","webpack://webpacktest/./src/index.js"],"names":["addZero","num","parseInt","puzzleGame","elements","puzzle","puzzleBoard","blackout","movesCount","timeCounter","paused","startScreen","resultBoard","resumeSavedGame","burgerMenu","mobileMenuPopup","mobileBestResults","header","boardSizeBtns","puzzleTypeBtns","cards","moves","menuButtons","mobileButtons","bestResults","properties","boardSize","puzzleSize","picturePuzzle","cellSize","movesCounter","currentImg","audio","timer","firstMove","canDrop","isAdjacent","emptyCell","top","left","element","hours","minutes","seconds","init","this","createDOM","loadBestResults","setMediaQueries","document","querySelectorAll","forEach","key","textContent","addEventListener","solvePuzzle","restart","classList","add","style","display","saveGame","remove","resetCounters","endGame","window","innerWidth","documentElement","clientWidth","body","createElement","headerLogo","puzzleWrapper","buttonsMenu","burgerMiddle","appendChild","className","width","height","innerHTML","setAttribute","createMenuButtons","openStartScreen","createPausedButtons","disabled","fragment","createDocumentFragment","boardSizeFragment","keyElement","keyElementWrapper","push","i","length","puzzleTypeFragment","playBtn","playGame","localStorage","getItem","removeEventListener","backgroundColor","setTimeout","timeCount","createCells","images","Math","floor","random","cellsNum","cell","leftPosition","topPosition","margin","backgroundImage","backgroundSize","backgroundPositionX","backgroundPositionY","startLeft","startTop","value","moveCell","playAudio","isFinished","dragStart","dragOver","dragEnd","createEmptyCell","cellNum","dragEnter","dragLeave","drop","index","abs","currentCellLeft","currentCellTop","e","preventDefault","mixCards","minSteps","maxSteps","steps","ceil","possibleMoves","randomMove","newLeft","newTop","j","activeCell","refactorMoves","currentIndex","compareIndex","splice","every","cellPosition","setBestResults","createYouWinMsg","children","youWinPopUp","youWinWrapper","youWinPopUpMsg","removeChild","currentMoves","currentHours","currentMinutes","currentSeconds","newBestResult","biggestNum","currentNum","bestResultsString","join","setItem","bestResultsArr","split","map","sort","a","b","resultList","resultListElement","resultString","current","pop","moveX","moveY","querySelector","play","countTime","removeItem","size","type","hoursTimer","minutesTimer","secondsTimer","emptyCellLeft","emptyCellTop","img","movesRoute","saveGameStringInfo","savedGamePopup","message","btn","loadSavedGame","typeToBool","Boolean","savedMoves","elementsToNumbers","el","lastMove","createMobileMenu","mobileMenuHeader","loadBestResultsMobile","mobileBtn"],"mappings":"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","file":"script.js","sourcesContent":["// add a leading zero to timer\n\nexport default function addZero(num) {\n  return (parseInt(num, 10) < 10 ? '0' : '') + num;\n}\n","import addZero from './stat';\nimport './assets/1.jpg';\nimport './assets/2.jpg';\nimport './assets/3.jpg';\nimport './assets/4.jpg';\nimport './assets/5.jpg';\nimport './assets/6.jpg';\nimport './assets/7.jpg';\nimport './assets/8.jpg';\nimport './assets/9.jpg';\nimport './assets/10.jpg';\nimport './assets/tink.wav';\n\nconst puzzleGame = {\n  elements: {\n    puzzle: null,\n    puzzleBoard: null,\n    blackout: null,\n    movesCount: null,\n    timeCounter: null,\n    paused: null,\n    startScreen: null,\n    resultBoard: null,\n    resumeSavedGame: null,\n    burgerMenu: null,\n    mobileMenuPopup: null,\n    mobileBestResults: null,\n    header: null,\n    boardSizeBtns: [],\n    puzzleTypeBtns: [],\n    cards: [],\n    moves: [],\n    menuButtons: [],\n    mobileButtons: [],\n    bestResults: [],\n  },\n\n  properties: {\n    boardSize: 600,\n    puzzleSize: 4,\n    picturePuzzle: false,\n    cellSize: 0,\n    movesCounter: 0,\n    currentImg: null,\n    audio: false,\n    timer: false,\n    firstMove: false,\n    canDrop: false,\n    isAdjacent: false,\n  },\n\n  emptyCell: {\n    top: 0,\n    left: 0,\n    element: null,\n  },\n\n  timer: {\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  },\n\n  init() {\n    this.boardSize();\n    this.createDOM();\n    this.burgerMenu();\n    this.loadBestResults();\n    this.setMediaQueries();\n    this.elements.menuButtons = document.querySelectorAll('.btn');\n    this.elements.menuButtons.forEach((key) => {\n      const btn = key.textContent;\n      switch (btn) {\n        case 'solve puzzle':\n          key.addEventListener('click', () => {\n            this.properties.timer = false;\n            this.solvePuzzle();\n          });\n          break;\n        case 'restart game':\n          key.addEventListener('click', () => {\n            this.restart();\n          });\n          break;\n        case 'pause':\n          key.addEventListener('click', () => {\n            this.elements.paused.classList.add('paused--active');\n            this.properties.timer = false;\n            this.elements.blackout.style.display = 'block';\n          });\n          break;\n        case 'save game':\n          key.addEventListener('click', () => {\n            this.saveGame();\n          });\n          break;\n        case 'quit':\n          key.addEventListener('click', () => {\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n            this.properties.puzzleSize = 4;\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n            this.elements.startScreen.classList.add('start-screen--active');\n            this.resetCounters();\n            this.endGame();\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n\n  boardSize() {\n    const width = window.innerWidth || document.documentElement.clientWidth\n    || document.body.clientWidth;\n    if (width > 1301) this.properties.boardSize = 600;\n    if (window.innerWidth < 1301 && window.innerWidth > 900) this.properties.boardSize = 500;\n    if (window.innerWidth < 901 && window.innerWidth > 600) this.properties.boardSize = 400;\n    if (window.innerWidth < 600) this.properties.boardSize = 280;\n  },\n\n  createDOM() {\n    // Create main elements\n    this.elements.puzzle = document.createElement('div');\n    this.elements.puzzleBoard = document.createElement('div');\n\n    this.elements.header = document.createElement('div');\n    const headerLogo = document.createElement('div');\n    this.elements.timeCounter = document.createElement('div');\n    this.elements.movesCount = document.createElement('div');\n    const puzzleWrapper = document.createElement('div');\n    this.elements.resultBoard = document.createElement('div');\n    const buttonsMenu = document.createElement('div');\n    const audio = document.createElement('audio');\n    this.elements.paused = document.createElement('div');\n    this.elements.startScreen = document.createElement('div');\n    this.elements.blackout = document.createElement('div');\n\n    this.elements.burgerMenu = document.createElement('button');\n    const burgerMiddle = document.createElement('span');\n    this.elements.burgerMenu.appendChild(burgerMiddle);\n\n    // add classes to main elements\n    this.elements.puzzle.classList.add('puzzle');\n    this.elements.puzzleBoard.classList.add('puzzle-board');\n    this.elements.header.classList.add('header');\n    headerLogo.classList.add('header-logo');\n    this.elements.timeCounter.classList.add('time-counter');\n    this.elements.movesCount.classList.add('moves-counter');\n    puzzleWrapper.classList.add('puzzle-wrapper');\n    this.elements.resultBoard.classList.add('best-results');\n    buttonsMenu.classList.add('buttons-menu');\n    audio.classList.add('audio-twink');\n    this.elements.paused.className = ('paused');\n    this.elements.startScreen.className = ('start-screen');\n    this.elements.blackout.className = 'blackout';\n    this.elements.burgerMenu.className = 'header__burger';\n\n    // add custom styles to board\n    this.elements.puzzleBoard.style.width = `${this.properties.boardSize}px`;\n    this.elements.puzzleBoard.style.height = `${this.properties.boardSize}px`;\n    this.elements.header.style.width = `${this.properties.boardSize}px`;\n\n    // add inner text and attributes\n    headerLogo.textContent = 'Gem Puzzle';\n    this.elements.timeCounter.innerHTML = `Time: <span>${addZero(this.timer.hours)}</span>:<span>${addZero(this.timer.minutes)}</span>:<span>${addZero(this.timer.seconds)}</span>`;\n    this.elements.movesCount.innerHTML = `Moves: <span>${this.properties.movesCounter}</span>`;\n    audio.setAttribute('src', 'assets/tink.wav');\n    this.elements.paused.innerHTML = '<span>Paused</span>';\n\n    // add to DOM\n    this.elements.header.appendChild(headerLogo);\n    this.elements.header.appendChild(this.elements.timeCounter);\n    this.elements.header.appendChild(this.elements.movesCount);\n    this.elements.header.appendChild(this.elements.burgerMenu);\n    this.elements.puzzle.appendChild(this.elements.blackout);\n    this.elements.puzzle.appendChild(this.elements.header);\n    this.elements.puzzle.appendChild(puzzleWrapper);\n    puzzleWrapper.appendChild(this.elements.resultBoard);\n    puzzleWrapper.appendChild(this.elements.puzzleBoard);\n    buttonsMenu.appendChild(this.createMenuButtons());\n    puzzleWrapper.appendChild(buttonsMenu);\n    this.elements.startScreen.appendChild(this.openStartScreen());\n    this.elements.paused.appendChild(this.createPausedButtons());\n    document.body.appendChild(this.elements.puzzle);\n    document.body.appendChild(audio);\n    document.body.appendChild(this.elements.paused);\n    document.body.appendChild(this.elements.startScreen);\n  },\n\n  openStartScreen() {\n    this.elements.startScreen.innerHTML = '<span>New Game</span>';\n    this.elements.startScreen.classList.add('start-screen--active');\n\n    this.elements.burgerMenu.disabled = true;\n\n    const fragment = document.createDocumentFragment();\n\n    const boardSize = ['3x3', '4x4', '5x5', '6x6', '7x7', '8x8'];\n    const puzzleType = ['Numbers', 'Picture'];\n\n    // create boardSize buttons\n    const boardSizeFragment = document.createElement('ul');\n    boardSizeFragment.className = 'board-size-list';\n\n    boardSize.forEach((key) => {\n      const keyElement = document.createElement('button');\n      const keyElementWrapper = document.createElement('li');\n      keyElementWrapper.appendChild(keyElement);\n\n      keyElement.setAttribute('type', 'button');\n      keyElement.classList.add('start-screen__btn');\n      keyElement.classList.add('board-size__btn');\n\n      keyElement.textContent = key;\n\n      this.elements.boardSizeBtns.push(keyElement);\n      boardSizeFragment.appendChild(keyElementWrapper);\n    });\n    for (let i = 0; i < this.elements.boardSizeBtns.length; i += 1) {\n      this.elements.boardSizeBtns[i].addEventListener('click', () => {\n        this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n        this.elements.boardSizeBtns[i].classList.add('board-size__btn--active');\n        this.properties.puzzleSize = i + 3;\n      });\n    }\n\n    // Set default size to active\n    this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n    // create puzzle type buttons\n    const puzzleTypeFragment = document.createElement('ul');\n    puzzleTypeFragment.className = 'puzzle-type-list';\n\n    puzzleType.forEach((key) => {\n      const keyElement = document.createElement('button');\n      const keyElementWrapper = document.createElement('li');\n      keyElementWrapper.appendChild(keyElement);\n\n      keyElement.setAttribute('type', 'button');\n      keyElement.classList.add('start-screen__btn');\n      keyElement.classList.add('puzzle-type__btn');\n\n      keyElement.textContent = key;\n      if (key === 'Numbers') keyElement.classList.add('puzzle-type__btn--active');\n\n      this.elements.puzzleTypeBtns.push(keyElement);\n      puzzleTypeFragment.appendChild(keyElementWrapper);\n    });\n    // iterate over buttons and add eventlistener on clicks\n    this.elements.puzzleTypeBtns.forEach((key) => {\n      key.addEventListener('click', () => {\n        if (key === this.elements.puzzleTypeBtns[0]) {\n          this.elements.puzzleTypeBtns[1].classList.remove('puzzle-type__btn--active');\n          this.properties.picturePuzzle = false;\n          key.classList.add('puzzle-type__btn--active');\n        } else {\n          this.elements.puzzleTypeBtns[0].classList.remove('puzzle-type__btn--active');\n          this.properties.picturePuzzle = true;\n          key.classList.add('puzzle-type__btn--active');\n        }\n      });\n    });\n    // Create play button\n\n    const playBtn = document.createElement('button');\n    playBtn.setAttribute('type', 'button');\n    playBtn.classList.add('start-screen__btn');\n    playBtn.classList.add('play-btn');\n    playBtn.textContent = 'Play';\n\n    playBtn.addEventListener('click', () => {\n      this.playGame();\n      this.elements.burgerMenu.disabled = false;\n    });\n\n    // Create resume saves game button\n\n    this.elements.resumeSavedGame = document.createElement('button');\n    this.elements.resumeSavedGame.setAttribute('type', 'button');\n    this.elements.resumeSavedGame.className = 'resume-saved';\n    this.elements.resumeSavedGame.textContent = 'Resume Saved Game';\n\n    if (localStorage.getItem('savedGame')) {\n      this.elements.resumeSavedGame.textContent = 'Resume Saved Game';\n      this.elements.resumeSavedGame.classList.remove('resume-saved--disabled');\n\n      this.elements.resumeSavedGame.addEventListener('click', this.resumeSavedGame);\n    } else {\n      this.elements.resumeSavedGame.textContent = 'No Saved Games Yet';\n      this.elements.resumeSavedGame.classList.add('resume-saved--disabled');\n\n      this.elements.resumeSavedGame.removeEventListener('click', this.resumeSavedGame);\n    }\n    // construct the fragment\n    fragment.appendChild(boardSizeFragment);\n    fragment.appendChild(puzzleTypeFragment);\n    fragment.appendChild(playBtn);\n    fragment.appendChild(this.elements.resumeSavedGame);\n    return fragment;\n  },\n\n  createMenuButtons() {\n    const fragment = document.createElement('ul');\n    fragment.classList.add('buttons-menu');\n    const menuBtns = ['sound', 'restart game', 'save game', 'solve puzzle', 'pause', 'quit'];\n\n    menuBtns.forEach((key) => {\n      const keyElement = document.createElement('button');\n      const keyElementWrapper = document.createElement('li');\n      keyElementWrapper.appendChild(keyElement);\n      // Add atributes and classes\n      keyElement.setAttribute('type', 'button');\n      keyElement.classList.add('btn');\n\n      switch (key) {\n        case 'sound':\n          if (this.properties.audio) {\n            keyElement.textContent = 'sound on';\n            keyElement.style.backgroundColor = '';\n          } else {\n            keyElement.textContent = 'sound off';\n            keyElement.style.backgroundColor = 'grey';\n          }\n          keyElement.addEventListener('click', () => {\n            this.properties.audio = !this.properties.audio;\n            if (this.properties.audio) {\n              keyElement.textContent = 'sound on';\n              keyElement.style.backgroundColor = '';\n            } else {\n              keyElement.textContent = 'sound off';\n              keyElement.style.backgroundColor = 'grey';\n            }\n          });\n          break;\n        default:\n          keyElement.textContent = key;\n          break;\n      }\n\n      fragment.appendChild(keyElementWrapper);\n    });\n    return fragment;\n  },\n  createPausedButtons() {\n    const fragment = document.createElement('ul');\n    fragment.classList.add('paused-menu');\n    const pausedBtns = ['resume', 'restart', 'save game', 'quit'];\n    pausedBtns.forEach((key) => {\n      const keyElement = document.createElement('button');\n      const keyElementWrapper = document.createElement('li');\n      keyElementWrapper.appendChild(keyElement);\n      // Add atributes and classes\n      keyElement.setAttribute('type', 'button');\n      keyElement.classList.add('btn-paused');\n\n      switch (key) {\n        case 'resume':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.elements.blackout.style.display = 'none';\n            this.elements.paused.classList.remove('paused--active');\n            if (this.properties.firstMove) this.properties.timer = true;\n            setTimeout(() => {\n              this.timeCount();\n            }, 1000);\n          });\n          break;\n        case 'restart':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.restart();\n            this.elements.paused.classList.remove('paused--active');\n          });\n          break;\n        case 'save game':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.saveGame();\n          });\n          break;\n        case 'quit':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.elements.paused.classList.remove('paused--active');\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n            this.properties.puzzleSize = 4;\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n            this.elements.startScreen.classList.add('start-screen--active');\n            this.resetCounters();\n            this.endGame();\n          });\n          break;\n        default:\n          keyElement.textContent = key;\n          break;\n      }\n      fragment.appendChild(keyElementWrapper);\n    });\n    return fragment;\n  },\n\n  createCells() {\n    const fragment = document.createDocumentFragment();\n    const images = ['1.jpg', '2.jpg', '3.jpg', '4.jpg', '5.jpg', '6.jpg', '7.jpg', '8.jpg', '9.jpg', '10.jpg'];\n    if (!this.properties.currentImg) {\n      this.properties.currentImg = Math.floor(Math.random() * 10);\n    }\n    const cellsNum = (this.properties.puzzleSize ** 2) - 1;\n    for (let i = 0; i < cellsNum; i += 1) {\n      const cell = document.createElement('div');\n      cell.className = 'puzzle-cell';\n      this.properties.cellSize = this.properties.boardSize / this.properties.puzzleSize;\n      cell.setAttribute('draggable', 'true');\n\n      const leftPosition = i % this.properties.puzzleSize;\n      const topPosition = (i - leftPosition) / this.properties.puzzleSize;\n      // Set cell type\n      if (this.properties.picturePuzzle === false) {\n        cell.innerHTML = i + 1;\n        cell.style.width = `${this.properties.cellSize - 10}px`;\n        cell.style.height = `${this.properties.cellSize - 10}px`;\n      } else if (this.properties.picturePuzzle === true) {\n        cell.style.width = `${this.properties.cellSize - 5}px`;\n        cell.style.height = `${this.properties.cellSize - 5}px`;\n        cell.style.margin = '2px';\n        cell.style.backgroundImage = `url(\"assets/${images[this.properties.currentImg]}\")`;\n        cell.style.backgroundSize = `${this.properties.boardSize}px ${this.properties.boardSize}px`;\n        cell.style.backgroundPositionX = `-${leftPosition * this.properties.cellSize}px`;\n        cell.style.backgroundPositionY = `-${topPosition * this.properties.cellSize}px`;\n      }\n\n      // put cell into array\n      this.elements.cards.push({\n        left: leftPosition,\n        top: topPosition,\n        startLeft: leftPosition,\n        startTop: topPosition,\n        element: cell, // dom element\n        value: i + 1,\n      });\n\n      cell.style.left = `${leftPosition * this.properties.cellSize}px`;\n      cell.style.top = `${topPosition * this.properties.cellSize}px`;\n\n      // Move cells on click\n      cell.addEventListener('click', () => {\n        this.moveCell(i);\n        this.playAudio();\n        this.isFinished();\n        //  start timer on first move\n        if (!this.properties.timer) {\n          this.properties.timer = true;\n          setTimeout(() => {\n            this.timeCount();\n          }, 1000);\n        }\n      });\n\n      // Move cells on drag\n      cell.addEventListener('dragstart', () => this.dragStart(i));\n      cell.addEventListener('dragover', this.dragOver);\n      cell.addEventListener('dragend', () => this.dragEnd(i));\n\n      fragment.appendChild(cell);\n    }\n    this.createEmptyCell();\n    fragment.appendChild(this.emptyCell.element);\n    return fragment;\n  },\n\n  createEmptyCell() {\n    const cellNum = (this.properties.puzzleSize ** 2) - 1;\n    this.emptyCell.top = cellNum % this.properties.puzzleSize;\n    this.emptyCell.left = cellNum % this.properties.puzzleSize;\n    this.emptyCell.element = document.createElement('div');\n    this.emptyCell.element.classList.add('empty-cell');\n\n    this.emptyCell.element.style.width = `${this.properties.cellSize - 10}px`;\n    this.emptyCell.element.style.height = `${this.properties.cellSize - 10}px`;\n\n    this.emptyCell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n    this.emptyCell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n\n    this.emptyCell.element.addEventListener('dragover', this.dragOver);\n    this.emptyCell.element.addEventListener('dragenter', this.dragEnter);\n    this.emptyCell.element.addEventListener('dragleave', this.dragLeave);\n    this.emptyCell.element.addEventListener('drop', this.drop);\n  },\n\n  moveCell(index) {\n    const cell = this.elements.cards[index];\n\n    // check if current cell is adjecent and can be moved\n    const leftDifference = Math.abs(this.emptyCell.left - cell.left);\n    const topDifference = Math.abs(this.emptyCell.top - cell.top);\n\n    if (leftDifference + topDifference > 1) {\n      return;\n    }\n    // move cell to new address\n    cell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n    cell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n    // create temporary coordinates for previous cell address\n    const currentCellLeft = this.emptyCell.left;\n    const currentCellTop = this.emptyCell.top;\n    // change empty cell address\n    this.elements.moves.push([this.emptyCell.left, this.emptyCell.top]);\n    this.emptyCell.left = cell.left;\n    this.emptyCell.top = cell.top;\n    // update current cell address\n    this.elements.cards[index].left = currentCellLeft;\n    this.elements.cards[index].top = currentCellTop;\n    // update empty cell position\n    this.emptyCell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n    this.emptyCell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n    // update moves counter\n    this.properties.movesCounter += 1;\n    this.elements.movesCount.innerHTML = `Moves: <span>${this.properties.movesCounter}</span>`;\n    if (!this.properties.firstMove) this.properties.firstMove = true;\n  },\n\n  dragStart(index) {\n    const cell = this.elements.cards[index];\n    setTimeout(() => cell.element.classList.add('invisible'), 0);\n    // check if current cell is adjecent and can be moved\n    const leftDifference = Math.abs(this.emptyCell.left - cell.left);\n    const topDifference = Math.abs(this.emptyCell.top - cell.top);\n\n    if (leftDifference + topDifference <= 1) {\n      this.properties.isAdjacent = true;\n    }\n  },\n\n  dragEnd(index) {\n    const cell = this.elements.cards[index];\n    // check if element can be moved\n    if (this.properties.canDrop && this.properties.isAdjacent) {\n      // move cell to new address\n      cell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n      cell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n      // create temporary coordinates for previous cell address\n      const currentCellLeft = this.emptyCell.left;\n      const currentCellTop = this.emptyCell.top;\n      // change empty cell address\n      this.elements.moves.push([this.emptyCell.left, this.emptyCell.top]);\n      this.emptyCell.left = cell.left;\n      this.emptyCell.top = cell.top;\n      // update current cell address\n      this.elements.cards[index].left = currentCellLeft;\n      this.elements.cards[index].top = currentCellTop;\n      // update empty cell position\n      this.emptyCell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n      this.emptyCell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n      // update moves counter\n      this.properties.movesCounter += 1;\n      this.elements.movesCount.innerHTML = `Moves: <span>${this.properties.movesCounter}</span>`;\n      // start move counter\n      if (!this.properties.firstMove) {\n        this.properties.firstMove = true;\n        this.properties.timer = true;\n        setTimeout(() => {\n          this.timeCount();\n        }, 1000);\n      }\n    }\n    cell.element.classList.remove('invisible');\n    this.properties.isAdjacent = false;\n    this.properties.canDrop = false;\n\n    this.isFinished();\n  },\n\n  dragOver(e) {\n    e.preventDefault();\n  },\n\n  dragEnter() {\n    puzzleGame.properties.canDrop = true;\n  },\n\n  dragLeave() {\n    puzzleGame.properties.canDrop = false;\n  },\n\n  mixCards() {\n    // determine number of steps to switch the cards\n    this.elements.moves = [];\n    let minSteps = 0;\n    let maxSteps = 0;\n    switch (this.properties.puzzleSize) {\n      case 3:\n        minSteps = 30;\n        maxSteps = 60;\n        break;\n      case 4:\n        minSteps = 50;\n        maxSteps = 130;\n        break;\n      case 5:\n        minSteps = 80;\n        maxSteps = 210;\n        break;\n      case 6:\n        minSteps = 100;\n        maxSteps = 250;\n        break;\n      case 7:\n        minSteps = 150;\n        maxSteps = 270;\n        break;\n      default:\n        minSteps = 200;\n        maxSteps = 400;\n    }\n    const steps = Math.ceil(Math.random() * (maxSteps - minSteps) + minSteps);\n    for (let i = 0; i < steps; i += 1) {\n      const possibleMoves = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n      const randomMove = Math.floor(Math.random() * 4);\n      const newLeft = parseInt(possibleMoves[randomMove][0], 10)\n      + parseInt(this.emptyCell.left, 10);\n      const newTop = parseInt(possibleMoves[randomMove][1], 10) + parseInt(this.emptyCell.top, 10);\n      const check = newLeft < this.properties.puzzleSize\n                    && newLeft > -1\n                    && newTop < this.properties.puzzleSize\n                    && newTop > -1;\n      if (check) {\n        for (let j = 0; j < this.elements.cards.length; j += 1) {\n          if (this.elements.cards[j].left === newLeft\n              && this.elements.cards[j].top === newTop) {\n            const activeCell = this.elements.cards[j];\n            this.elements.cards[j].left = this.emptyCell.left;\n            this.elements.cards[j].top = this.emptyCell.top;\n            this.elements.moves.push([this.emptyCell.left, this.emptyCell.top]);\n            this.emptyCell.left = newLeft;\n            this.emptyCell.top = newTop;\n            activeCell.element.style.left = `${activeCell.left * this.properties.cellSize}px`;\n            activeCell.element.style.top = `${activeCell.top * this.properties.cellSize}px`;\n            // update empty cell position\n            this.emptyCell.element.style.left = `${this.emptyCell.left * this.properties.cellSize}px`;\n            this.emptyCell.element.style.top = `${this.emptyCell.top * this.properties.cellSize}px`;\n          }\n        }\n      }\n    }\n  },\n\n  refactorMoves() {\n    if (this.elements.moves.length > 2) {\n      let currentIndex = this.elements.moves.length - 1;\n      let compareIndex = this.elements.moves.length - 3;\n      while (compareIndex >= 0) {\n        if (this.elements.moves[currentIndex][0] === this.elements.moves[compareIndex][0]\n            && this.elements.moves[currentIndex][1] === this.elements.moves[compareIndex][1]) {\n          this.elements.moves.splice(compareIndex - 1, 2);\n          currentIndex -= 2;\n          compareIndex -= 2;\n        } else {\n          currentIndex -= 1;\n          compareIndex -= 1;\n        }\n      }\n    }\n  },\n\n  isFinished() {\n    const hasWon = this.elements.cards.every((key) => {\n      const cell = key;\n      const cellPosition = (cell.top * this.properties.puzzleSize + cell.left) + 1;\n      return cell.value === cellPosition;\n    });\n    if (hasWon) {\n      this.properties.timer = false;\n      this.properties.firstMove = false;\n\n      this.setBestResults();\n\n      setTimeout(() => {\n        this.createYouWinMsg();\n      }, 1000);\n    }\n  },\n  createYouWinMsg() {\n    // remove oled best results\n    while (this.elements.resultBoard.children.length > 0) {\n      this.elements.resultBoard.children[0].remove();\n    }\n    // Create the popup\n    const youWinPopUp = document.createElement('div');\n    const youWinWrapper = document.createElement('div');\n    const youWinPopUpMsg = document.createElement('p');\n\n    youWinPopUp.className = 'you-win-popup';\n    youWinWrapper.className = 'you-win-popup__wrapper';\n    youWinPopUpMsg.className = 'you-win-popup__message';\n\n    youWinPopUpMsg.innerHTML = `<span>You Win!</span> You solved the puzzle in:<br> ${addZero(this.timer.hours)}:${addZero(this.timer.minutes)}:${addZero(this.timer.seconds)} and ${this.properties.movesCounter} steps.`;\n\n    youWinWrapper.appendChild(youWinPopUpMsg);\n\n    // Create buttons\n    const youWinBtns = ['play again', 'quit'];\n    youWinBtns.forEach((key) => {\n      const keyElement = document.createElement('button');\n      keyElement.className = 'you-win-popup__btn';\n      keyElement.classList.add('btn-paused');\n      keyElement.textContent = key;\n\n      switch (key) {\n        case 'quit':\n          keyElement.addEventListener('click', () => {\n            document.body.removeChild(youWinPopUp);\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n            this.properties.puzzleSize = 4;\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n            this.elements.startScreen.classList.add('start-screen--active');\n            this.resetCounters();\n            this.endGame();\n          });\n          break;\n        case 'play again':\n          keyElement.addEventListener('click', () => {\n            document.body.removeChild(youWinPopUp);\n            this.restart();\n          });\n          break;\n        default:\n          keyElement.textContent = key;\n      }\n      return youWinWrapper.appendChild(keyElement);\n    });\n    youWinPopUp.appendChild(youWinWrapper);\n    document.body.appendChild(youWinPopUp);\n    this.properties.timer = false;\n\n    // load new best results\n    this.loadBestResults();\n  },\n\n  setBestResults() {\n    const currentMoves = this.properties.movesCounter;\n    const currentHours = this.timer.hours;\n    const currentMinutes = this.timer.minutes;\n    const currentSeconds = this.timer.seconds + 1;\n\n    const newBestResult = [currentMoves, `${addZero(currentHours)}:${addZero(currentMinutes)}:${addZero(currentSeconds)}`,\n      currentHours * 60 + currentMinutes * 60 + currentSeconds * 60];\n\n    if (this.elements.bestResults.length < 10) {\n      this.elements.bestResults.push(newBestResult);\n    } else {\n      // find the biggest current result\n      let biggestNum = parseInt(this.elements.bestResults[0][0], 10);\n      for (let i = 0; i < this.elements.bestResults.length; i += 1) {\n        const currentNum = parseInt(this.elements.bestResults[i][0], 10);\n        if (currentNum > biggestNum) biggestNum = currentNum;\n      }\n      // check if new result is better and replace if it is\n      if (currentMoves < biggestNum) this.elements.bestResults.splice(9, 1, newBestResult);\n    }\n\n    const bestResultsString = this.elements.bestResults.join('|');\n    localStorage.setItem('bestResults', bestResultsString);\n  },\n\n  loadBestResults() {\n    this.elements.resultBoard.innerHTML = 'Your 10 best results';\n    if (localStorage.getItem('bestResults')) {\n      const bestResults = localStorage.getItem('bestResults').split('|');\n      const bestResultsArr = bestResults\n        .map((key) => key.split(','))\n        .sort((a, b) => {\n          if (parseInt(a[0], 10) > parseInt(b[0], 10)) return 1;\n          return -1;\n        });\n      this.elements.bestResults = bestResultsArr;\n      // Load results on page\n      const resultList = document.createElement('ul');\n      resultList.className = 'result-list';\n      for (let i = 0; i < this.elements.bestResults.length; i += 1) {\n        const resultListElement = document.createElement('li');\n        const resultString = `${i + 1}. Steps: ${this.elements.bestResults[i][0]} / Time: ${this.elements.bestResults[i][1]}`;\n        resultListElement.textContent = resultString;\n        resultList.appendChild(resultListElement);\n      }\n      this.elements.resultBoard.appendChild(resultList);\n    }\n  },\n\n  solvePuzzle() {\n    if (this.elements.moves.length > 0) {\n      // make nemu buttons disabled exept for quit and restart\n      this.elements.menuButtons.forEach((key) => {\n        if (key.textContent !== 'quit') {\n          const element = key;\n          element.disabled = true;\n        }\n      });\n      const current = this.elements.moves.pop();\n      const moveX = current[0];\n      const moveY = current[1];\n\n      for (let j = 0; j < this.elements.cards.length; j += 1) {\n        const activeCell = this.elements.cards[j];\n        if (activeCell.left === moveX && activeCell.top === moveY) {\n          activeCell.left = this.emptyCell.left;\n          activeCell.top = this.emptyCell.top;\n\n          activeCell.element.style.left = `${activeCell.left * this.properties.cellSize}px`;\n          activeCell.element.style.top = `${activeCell.top * this.properties.cellSize}px`;\n\n          this.emptyCell.left = moveX;\n          this.emptyCell.top = moveY;\n        }\n      }\n      setTimeout(() => {\n        this.solvePuzzle();\n      }, 300);\n    } else {\n      this.elements.menuButtons.forEach((key) => {\n        const element = key;\n        element.disabled = false;\n      });\n      this.elements.blackout.style.display = 'block';\n      setTimeout(() => {\n        this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n        this.properties.puzzleSize = 4;\n        this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n        this.elements.startScreen.classList.add('start-screen--active');\n        this.resetCounters();\n        this.endGame();\n      }, 2000);\n    }\n  },\n  playGame() {\n    if (this.elements.puzzleTypeBtns[0].className === 'start-screen__btn puzzle-type__btn puzzle-type__btn--active') {\n      this.properties.picturePuzzle = false;\n    } else {\n      this.properties.picturePuzzle = true;\n    }\n    this.elements.puzzleBoard.appendChild(this.createCells());\n    this.mixCards();\n    this.elements.startScreen.classList.remove('start-screen--active');\n    this.elements.blackout.style.display = 'none';\n  },\n  playAudio() {\n    let audio;\n    if (this.properties.audio) {\n      audio = document.querySelector('.audio-twink');\n      audio.play();\n    }\n  },\n  timeCount() {\n    const countTime = () => {\n      if (this.properties.timer) {\n        this.timer.seconds += 1;\n        // when to incriment\n        if (this.timer.seconds / 60 === 1) {\n          this.timer.seconds = 0;\n          this.timer.minutes += 1;\n          if (this.timer.minutes / 60 === 1) {\n            this.timer.minutes = 0;\n            this.timer.hours += 1;\n          }\n        }\n        this.elements.timeCounter.innerHTML = `Time: <span>${addZero(this.timer.hours)}</span>:<span>${addZero(this.timer.minutes)}</span>:<span>${addZero(this.timer.seconds)}</span>`;\n        setTimeout(countTime, 1000);\n      }\n    };\n    countTime();\n  },\n\n  endGame() {\n    this.elements.moves = [];\n    this.elements.cards = [];\n    while (this.elements.puzzleBoard.children.length > 0) {\n      this.elements.puzzleBoard.children[0].remove();\n    }\n    this.emptyCell.top = 0;\n    this.emptyCell.left = 0;\n    this.emptyCell.element = null;\n    this.properties.firstMove = false;\n    this.properties.currentImg = null;\n    this.elements.blackout.style.display = 'block';\n    this.elements.resumeSavedGame.removeEventListener('click', this.resumeSavedGame);\n\n    if (localStorage.getItem('savedGame')) {\n      this.elements.resumeSavedGame.textContent = 'Resume Saved Game';\n      this.elements.resumeSavedGame.classList.remove('resume-saved--disabled');\n\n      this.elements.resumeSavedGame.addEventListener('click', this.resumeSavedGame);\n    } else {\n      this.elements.resumeSavedGame.removeEventListener('click', this.resumeSavedGame);\n      this.elements.resumeSavedGame.textContent = 'No Saved Games Yet';\n      this.elements.resumeSavedGame.classList.add('resume-saved--disabled');\n    }\n  },\n  restart() {\n    this.endGame();\n    setTimeout(() => {\n      this.elements.puzzleBoard.appendChild(this.createCells());\n    }, 0);\n    this.elements.blackout.style.display = 'none';\n    this.resetCounters();\n    setTimeout(() => {\n      this.mixCards();\n    }, 200);\n  },\n\n  resetCounters() {\n    this.properties.timer = false;\n    this.timer.hours = 0;\n    this.timer.minutes = 0;\n    this.timer.seconds = 0;\n    this.elements.timeCounter.innerHTML = `Time: <span>${addZero(this.timer.hours)}</span>:<span>${addZero(this.timer.minutes)}</span>:<span>${addZero(this.timer.seconds)}</span>`;\n    this.properties.movesCounter = 0;\n    this.elements.movesCount.innerHTML = `Moves: <span>${this.properties.movesCounter}</span>`;\n  },\n\n  saveGame() {\n    localStorage.removeItem('savedGame');\n    const size = this.properties.puzzleSize;\n    const type = this.properties.picturePuzzle;\n    const hoursTimer = this.timer.hours;\n    const minutesTimer = this.timer.minutes;\n    const secondsTimer = this.timer.seconds;\n    const emptyCellLeft = this.emptyCell.left;\n    const emptyCellTop = this.emptyCell.top;\n    const movesCount = this.properties.movesCounter;\n    const img = this.properties.currentImg;\n    let movesRoute = '';\n\n    this.elements.moves.forEach((key) => {\n      movesRoute += `${key}/`;\n    });\n\n    const saveGameStringInfo = `${size}|${type}|${hoursTimer}|${minutesTimer}|${secondsTimer}|${emptyCellLeft}|${emptyCellTop}|${movesCount}|${movesRoute}|${img}`;\n    localStorage.setItem('savedGame', saveGameStringInfo);\n\n    // save game popup\n    const savedGamePopup = document.createElement('div');\n    savedGamePopup.className = 'saved-game-popup';\n    const message = document.createElement('p');\n    message.className = 'saved-game-popup__message';\n    message.textContent = 'Your current game was saved!';\n    const btn = document.createElement('button');\n    btn.className = 'saved-game-popup__btn';\n    btn.classList.add('btn');\n    btn.textContent = 'Close';\n\n    savedGamePopup.appendChild(message);\n    savedGamePopup.appendChild(btn);\n\n    document.body.appendChild(savedGamePopup);\n\n    btn.addEventListener('click', () => {\n      document.body.removeChild(savedGamePopup);\n    });\n  },\n\n  loadSavedGame() {\n    const savedGame = localStorage.getItem('savedGame');\n    const savedGameInfoArr = savedGame.split('|');\n\n    const [size, type, hoursTimer, minutesTimer, secondsTimer, emptyCellLeft,\n      emptyCellTop, movesCount, moves, currentImg] = savedGameInfoArr;\n\n    const typeToBool = (type === 'false') ? 0 : 1;\n\n    this.properties.puzzleSize = parseInt(size, 10);\n    this.properties.picturePuzzle = Boolean(typeToBool);\n    this.timer.hours = parseInt(hoursTimer, 10);\n    this.timer.minutes = parseInt(minutesTimer, 10);\n    this.timer.seconds = parseInt(secondsTimer, 10);\n    this.properties.movesCounter = parseInt(movesCount, 10);\n    this.properties.currentImg = parseInt(currentImg, 10);\n\n    puzzleGame.elements.puzzleBoard.appendChild(puzzleGame.createCells());\n\n    const movesRoute = moves.split('/');\n    // remove the last one as it's empty\n    movesRoute.pop();\n    const savedMoves = [];\n    movesRoute.forEach((key) => {\n      const splitArr = key.split(',');\n      const elementsToNumbers = splitArr.map((el) => parseInt(el, 10));\n      savedMoves.push(elementsToNumbers);\n    });\n\n    // load the empty cell position\n    const lastMove = [];\n    lastMove.push(parseInt(emptyCellLeft, 10));\n    lastMove.push(parseInt(emptyCellTop, 10));\n    savedMoves.push(lastMove);\n\n    // load the saved board\n    savedMoves.forEach((key) => {\n      const moveX = key[0];\n      const moveY = key[1];\n\n      for (let i = 0; i < this.elements.cards.length; i += 1) {\n        const activeCell = this.elements.cards[i];\n        if (activeCell.left === moveX && activeCell.top === moveY) {\n          activeCell.left = this.emptyCell.left;\n          activeCell.top = this.emptyCell.top;\n\n          activeCell.element.style.left = `${activeCell.left * this.properties.cellSize}px`;\n          activeCell.element.style.top = `${activeCell.top * this.properties.cellSize}px`;\n\n          this.emptyCell.left = moveX;\n          this.emptyCell.top = moveY;\n        }\n      }\n    });\n\n    // Update counters\n    this.elements.movesCount.innerHTML = `Moves: <span>${this.properties.movesCounter}</span>`;\n    this.elements.timeCounter.innerHTML = `Time: <span>${addZero(this.timer.hours)}</span>:<span>${addZero(this.timer.minutes)}</span>:<span>${addZero(this.timer.seconds)}</span>`;\n\n    // Copy the moves to current moves array\n    savedMoves.forEach((key) => this.elements.moves.push(key));\n  },\n  // callback for click event\n  resumeSavedGame() {\n    puzzleGame.loadSavedGame();\n    puzzleGame.elements.startScreen.classList.remove('start-screen--active');\n    puzzleGame.elements.blackout.style.display = 'none';\n  },\n\n  burgerMenu() {\n    const burgerBtn = this.elements.burgerMenu;\n\n    burgerBtn.addEventListener('click', () => {\n      if (this.elements.burgerMenu.className === 'header__burger active') {\n        this.elements.burgerMenu.classList.remove('active');\n        this.elements.blackout.style.display = 'none';\n        document.body.removeChild(this.elements.mobileMenuPopup);\n      } else {\n        this.elements.burgerMenu.classList.add('active');\n        this.elements.blackout.style.display = 'block';\n        this.properties.timer = false;\n        this.createMobileMenu();\n      }\n    });\n  },\n\n  createMobileMenu() {\n    this.elements.mobileMenuPopup = document.createElement('div');\n    this.elements.mobileMenuPopup.className = 'mobile-menu-popup';\n    const mobileMenuHeader = document.createElement('p');\n    mobileMenuHeader.className = 'mobile-menu__header';\n    mobileMenuHeader.textContent = 'Menu';\n    this.elements.mobileMenuPopup.appendChild(mobileMenuHeader);\n\n    const burgerBtns = ['sound', 'resume', 'restart', 'save game', 'solve puzzle', 'best results', 'quit'];\n    const fragment = document.createElement('ul');\n    fragment.classList.add('mobile-menu');\n    burgerBtns.forEach((key) => {\n      const keyElement = document.createElement('button');\n      const keyElementWrapper = document.createElement('li');\n      keyElementWrapper.appendChild(keyElement);\n      // Add atributes and classes\n      keyElement.setAttribute('type', 'button');\n      keyElement.classList.add('mobile-menu__btn');\n\n      switch (key) {\n        case 'sound':\n          if (this.properties.audio) {\n            keyElement.textContent = 'sound on';\n            keyElement.style.backgroundColor = '';\n          } else {\n            keyElement.textContent = 'sound off';\n            keyElement.style.backgroundColor = 'grey';\n          }\n          keyElement.addEventListener('click', () => {\n            this.properties.audio = !this.properties.audio;\n            if (this.properties.audio) {\n              keyElement.textContent = 'sound on';\n              keyElement.style.backgroundColor = '';\n            } else {\n              keyElement.textContent = 'sound off';\n              keyElement.style.backgroundColor = 'grey';\n            }\n          });\n          break;\n        case 'resume':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            if (this.properties.firstMove) this.properties.timer = true;\n            document.body.removeChild(this.elements.mobileMenuPopup);\n            this.elements.burgerMenu.classList.remove('active');\n            this.elements.blackout.style.display = 'none';\n            setTimeout(() => {\n              this.timeCount();\n            }, 1000);\n          });\n          break;\n        case 'restart':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.restart();\n            document.body.removeChild(this.elements.mobileMenuPopup);\n            this.elements.burgerMenu.classList.remove('active');\n            this.elements.blackout.style.display = 'none';\n          });\n          break;\n        case 'save game':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.saveGame();\n          });\n          break;\n        case 'solve puzzle':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.properties.timer = false;\n            this.solvePuzzle();\n            document.body.removeChild(this.elements.mobileMenuPopup);\n            this.elements.burgerMenu.classList.remove('active');\n            this.elements.blackout.style.display = 'none';\n          });\n          break;\n        case 'best results':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.loadBestResultsMobile();\n          });\n          break;\n        case 'quit':\n          keyElement.textContent = key;\n          keyElement.addEventListener('click', () => {\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.remove('board-size__btn--active');\n            this.properties.puzzleSize = 4;\n            this.elements.boardSizeBtns[this.properties.puzzleSize - 3].classList.add('board-size__btn--active');\n            this.elements.startScreen.classList.add('start-screen--active');\n            this.resetCounters();\n            this.endGame();\n            document.body.removeChild(this.elements.mobileMenuPopup);\n            this.elements.burgerMenu.classList.remove('active');\n            this.elements.blackout.style.display = 'none';\n          });\n          break;\n        default:\n          keyElement.textContent = key;\n          break;\n      }\n      fragment.appendChild(keyElementWrapper);\n    });\n    this.elements.mobileMenuPopup.appendChild(fragment);\n    document.body.appendChild(this.elements.mobileMenuPopup);\n  },\n\n  loadBestResultsMobile() {\n    this.elements.mobileBestResults = document.createElement('div');\n    this.elements.mobileBestResults.className = 'mobile-best-results';\n    const mobileMenuHeader = document.createElement('p');\n    mobileMenuHeader.className = 'mobile-menu__header';\n    mobileMenuHeader.textContent = 'Best results';\n    this.elements.mobileBestResults.appendChild(mobileMenuHeader);\n\n    if (localStorage.getItem('bestResults')) {\n      const bestResults = localStorage.getItem('bestResults').split('|');\n      const bestResultsArr = bestResults\n        .map((key) => key.split(','))\n        .sort((a, b) => {\n          if (parseInt(a[0], 10) > parseInt(b[0], 10)) return 1;\n          return -1;\n        });\n      this.elements.bestResults = bestResultsArr;\n      // Load results on page\n      const resultList = document.createElement('ul');\n      resultList.className = 'mobile-result-list';\n      for (let i = 0; i < this.elements.bestResults.length; i += 1) {\n        const resultListElement = document.createElement('li');\n        const resultString = `${i + 1}. Steps: ${this.elements.bestResults[i][0]} / Time: ${this.elements.bestResults[i][1]}`;\n        resultListElement.textContent = resultString;\n        resultList.appendChild(resultListElement);\n      }\n      this.elements.mobileBestResults.appendChild(resultList);\n    }\n\n    const mobileBtn = document.createElement('button');\n    mobileBtn.setAttribute('type', 'button');\n    mobileBtn.className = 'mobile-menu__btn';\n\n    mobileBtn.textContent = 'Close';\n    mobileBtn.addEventListener('click', () => {\n      document.body.removeChild(this.elements.mobileBestResults);\n    });\n    this.elements.mobileBestResults.appendChild(mobileBtn);\n    document.body.appendChild(this.elements.mobileBestResults);\n  },\n\n  setMediaQueries() {\n    window.addEventListener('resize', () => {\n      if (window.innerWidth > 1300) {\n        puzzleGame.properties.boardSize = 600;\n        this.properties.cellSize = this.properties.boardSize / this.properties.puzzleSize;\n        puzzleGame.elements.puzzleBoard.style.width = `${this.properties.boardSize}px`;\n        puzzleGame.elements.puzzleBoard.style.height = `${this.properties.boardSize}px`;\n        this.elements.header.style.width = `${this.properties.boardSize}px`;\n        this.elements.cards.forEach((key) => {\n          const cell = key;\n          if (this.properties.picturePuzzle === false) {\n            cell.element.style.width = `${this.properties.cellSize - 10}px`;\n            cell.element.style.height = `${this.properties.cellSize - 10}px`;\n          } else if (this.properties.picturePuzzle === true) {\n            cell.element.style.width = `${this.properties.cellSize - 5}px`;\n            cell.element.style.height = `${this.properties.cellSize - 5}px`;\n            cell.element.style.margin = '2px';\n            cell.element.style.backgroundSize = `${this.properties.boardSize}px ${this.properties.boardSize}px`;\n            cell.element.style.backgroundPositionX = `-${cell.startLeft * this.properties.cellSize}px`;\n            cell.element.style.backgroundPositionY = `-${cell.startTop * this.properties.cellSize}px`;\n          }\n          cell.element.style.left = `${cell.left * this.properties.cellSize}px`;\n          cell.element.style.top = `${cell.top * this.properties.cellSize}px`;\n        });\n      } else if (window.innerWidth < 1301 && window.innerWidth > 900) {\n        puzzleGame.properties.boardSize = 500;\n        this.properties.cellSize = this.properties.boardSize / this.properties.puzzleSize;\n        puzzleGame.elements.puzzleBoard.style.width = `${this.properties.boardSize}px`;\n        puzzleGame.elements.puzzleBoard.style.height = `${this.properties.boardSize}px`;\n        this.elements.header.style.width = `${this.properties.boardSize}px`;\n        this.elements.cards.forEach((key) => {\n          const cell = key;\n          if (this.properties.picturePuzzle === false) {\n            cell.element.style.width = `${this.properties.cellSize - 10}px`;\n            cell.element.style.height = `${this.properties.cellSize - 10}px`;\n          } else if (this.properties.picturePuzzle === true) {\n            cell.element.style.width = `${this.properties.cellSize - 5}px`;\n            cell.element.style.height = `${this.properties.cellSize - 5}px`;\n            cell.element.style.margin = '2px';\n            cell.element.style.backgroundSize = `${this.properties.boardSize}px ${this.properties.boardSize}px`;\n            cell.element.style.backgroundPositionX = `-${cell.startLeft * this.properties.cellSize}px`;\n            cell.element.style.backgroundPositionY = `-${cell.startTop * this.properties.cellSize}px`;\n          }\n          cell.element.style.left = `${cell.left * this.properties.cellSize}px`;\n          cell.element.style.top = `${cell.top * this.properties.cellSize}px`;\n        });\n      } else if (window.innerWidth < 901 && window.innerWidth > 600) {\n        puzzleGame.properties.boardSize = 400;\n        this.properties.cellSize = this.properties.boardSize / this.properties.puzzleSize;\n        puzzleGame.elements.puzzleBoard.style.width = `${this.properties.boardSize}px`;\n        puzzleGame.elements.puzzleBoard.style.height = `${this.properties.boardSize}px`;\n        this.elements.header.style.width = `${this.properties.boardSize}px`;\n        this.elements.cards.forEach((key) => {\n          const cell = key;\n          if (this.properties.picturePuzzle === false) {\n            cell.element.style.width = `${this.properties.cellSize - 10}px`;\n            cell.element.style.height = `${this.properties.cellSize - 10}px`;\n          } else if (this.properties.picturePuzzle === true) {\n            cell.element.style.width = `${this.properties.cellSize - 5}px`;\n            cell.element.style.height = `${this.properties.cellSize - 5}px`;\n            cell.element.style.margin = '2px';\n            cell.element.style.backgroundSize = `${this.properties.boardSize}px ${this.properties.boardSize}px`;\n            cell.element.style.backgroundPositionX = `-${cell.startLeft * this.properties.cellSize}px`;\n            cell.element.style.backgroundPositionY = `-${cell.startTop * this.properties.cellSize}px`;\n          }\n          cell.element.style.left = `${cell.left * this.properties.cellSize}px`;\n          cell.element.style.top = `${cell.top * this.properties.cellSize}px`;\n        });\n      } else {\n        puzzleGame.properties.boardSize = 280;\n        this.properties.cellSize = this.properties.boardSize / this.properties.puzzleSize;\n        puzzleGame.elements.puzzleBoard.style.width = `${this.properties.boardSize}px`;\n        puzzleGame.elements.puzzleBoard.style.height = `${this.properties.boardSize}px`;\n        this.elements.header.style.width = `${this.properties.boardSize}px`;\n        this.elements.cards.forEach((key) => {\n          const cell = key;\n          if (this.properties.picturePuzzle === false) {\n            cell.element.style.width = `${this.properties.cellSize - 5}px`;\n            cell.element.style.height = `${this.properties.cellSize - 5}px`;\n          } else if (this.properties.picturePuzzle === true) {\n            cell.element.style.width = `${this.properties.cellSize - 3}px`;\n            cell.element.style.height = `${this.properties.cellSize - 3}px`;\n            cell.element.style.margin = '2px';\n            cell.element.style.backgroundSize = `${this.properties.boardSize}px ${this.properties.boardSize}px`;\n            cell.element.style.backgroundPositionX = `-${cell.startLeft * this.properties.cellSize}px`;\n            cell.element.style.backgroundPositionY = `-${cell.startTop * this.properties.cellSize}px`;\n          }\n          cell.element.style.left = `${cell.left * this.properties.cellSize}px`;\n          cell.element.style.top = `${cell.top * this.properties.cellSize}px`;\n        });\n      }\n    });\n  },\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  puzzleGame.init();\n});\n"],"sourceRoot":""}